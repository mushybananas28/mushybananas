def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board):
    # Check rows, columns, and diagonals
    for i in range(3):
        if all(board[i][j] == board[i][0] and board[i][j] != ' ' for j in range(3)) or \
           all(board[j][i] == board[0][i] and board[j][i] != ' ' for j in range(3)):
            return True

    if all(board[i][i] == board[0][0] and board[i][i] != ' ' for i in range(3)) or \
       all(board[i][2 - i] == board[0][2] and board[i][2 - i] != ' ' for i in range(3)):
        return True

    return False

def is_board_full(board):
    return all(cell != ' ' for row in board for cell in row)

def tic_tac_toe():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    player_turn = True

    while True:
        print_board(board)

        if is_board_full(board):
            print("It's a draw!")
            break

        player = 'X' if player_turn else 'O'
        print(f"Player {player}'s turn:")

        try:
            row = int(input("Enter row (0, 1, or 2): "))
            col = int(input("Enter column (0, 1, or 2): "))
        except ValueError:
            print("Invalid input. Please enter a number.")
            continue

        if 0 <= row < 3 and 0 <= col < 3 and board[row][col] == ' ':
            board[row][col] = player

            if check_winner(board):
                print_board(board)
                print(f"Player {player} wins!")
                break

            player_turn = not player_turn
        else:
            print("Invalid move. Try again.")

if __name__ == "__main__":
    tic_tac_toe()

"""""""""""""""""""""""""""""""""""""""""""""""
